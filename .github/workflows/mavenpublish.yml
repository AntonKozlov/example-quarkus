
name: Maven Package

on:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-:  

    - run: mvn -B package -s settings.xml -DskipTests
      env:
        GITHUB_TOKEN: ${{ secrets.PACKAGES }}

    - name: Download JDK
      run: |
        id=$(curl -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/org-crac/jdk/releases/tags/release-crac | jq '.assets[] | select(.name == "jdk.tar.gz").id')
        curl -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/org-crac/jdk/releases/assets/$id -LJOH 'Accept: application/octet-stream'
        sudo tar -axf jdk.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.PACKAGES }}

    - run: |
        ( jdk/bin/java -Zcheckpoint:cr -jar target/example-quarkus-1.0-SNAPSHOT-runner.jar || echo $? > exitcode) &
        sleep 10 # allow service to start
        curl localhost:8080/hello # "warmup" the service
        jcmd target/example-quarkus-1.0-SNAPSHOT-runner.jar JDK.checkpoint
        sleep 10 # allow checkpoint to settle
        [ 137 = $(< exitcode) ]
    - run: timeout 10 jdk/bin/java -Zrestore:cr || [ $? = 124 ]

